{"version":3,"sources":["components/Result/Result.module.scss","common/sections/Textarea/EditTextarea.module.scss","common/sections/Title/EditTitle.module.scss","common/sections/Subtitle/EditSubtitle.module.scss","common/sections/MarkedList/ResultMarkedList.module.scss","common/sections/Link/ResultLink.module.scss","components/Container.module.scss","common/sections/Link/EditLink.module.scss","assets/images/cross.svg","redux/editor-reducer.js","assets/Подольский_ИНБО-04-19_трпп_4.pdf","components/D3/D3Data.jsx","components/D3/D3Main.jsx","components/Container.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js","components/Editor/Editor.module.scss","common/sections/MarkedList/EditMarkedList.module.scss"],"names":["module","exports","SET_SECTION","UPDATE_SECTION","DELETE_SECTION","ADD_LINE","DELETE_LINE","initialState","CV","editorReducer","state","action","type","content","filter","cv","id","map","message","list","name","link","title","Math","random","item","nodes","links","addChildNode","parentNode","childNode","size","distance","color","push","source","target","connectMainNodes","treeBuilder","roomIds","root","roomId","findingObj","find","node","connected_rooms","length","numLeaves","i","assembleChildNode","example","is_checked","room","index","console","log","D3Main","props","svg","useEffect","d3","attr","simulation","force","strength","on","e","g","transform","zoom_handler","append","lines","selectAll","data","enter","circles","style","d","window","alert","text","event","active","alpha","restart","fx","x","fy","y","alphaTarget","drag_handler","viewBox","preserveAspectRatio","Container","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","editor","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.1a94460f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"Result_result__3c7hi\",\"item\":\"Result_item__1VsMS\",\"text\":\"Result_text__3Of1R\",\"title\":\"Result_title__2pDlr\",\"subtitle\":\"Result_subtitle__37ntN\",\"marked\":\"Result_marked__3rC8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"EditTextarea_textarea__2HuB6\",\"container\":\"EditTextarea_container__2vOPT\",\"cross\":\"EditTextarea_cross__2P_Qn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"EditTitle_title__2FzB7\",\"container\":\"EditTitle_container__3sLk4\",\"cross\":\"EditTitle_cross__32LGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"EditSubtitle_title__1ooRT\",\"container\":\"EditSubtitle_container__3mi4G\",\"cross\":\"EditSubtitle_cross__3LRCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ResultMarkedList_list__3zB_2\",\"item\":\"ResultMarkedList_item__3amy1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ResultLink_list__3Mx2b\",\"item\":\"ResultLink_item__2vuVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1JeGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditLink_container__2KrP-\",\"footer\":\"EditLink_footer__3S86n\",\"inputCross\":\"EditLink_inputCross__2Mujo\",\"cross\":\"EditLink_cross__147li\",\"inputContainer\":\"EditLink_inputContainer__3uZIT\",\"input\":\"EditLink_input__3NBtJ\",\"addBtn\":\"EditLink_addBtn__1LTP1\"};","export default __webpack_public_path__ + \"static/media/cross.ae506d6c.svg\";","const SET_SECTION = 'SET_SECTION'\r\nconst UPDATE_SECTION = 'UPDATE_SECTION'\r\nconst DELETE_SECTION = 'DELETE_SECTION'\r\nconst ADD_LINE = 'ADD_LINE'\r\nconst DELETE_LINE = 'DELETE_LINE'\r\n\r\nlet initialState = {\r\n    CV: [\r\n//         {id: 228, type: 'text', message: `| hobby | match |\r\n// | :------: | :-----------: |\r\n// | games | ✔ |\r\n// | sing song | ✔ |\r\n// | js | ✔ |`},\r\n//         {id: 322, type: 'title', message: 'Тайтлец!'},\r\n//         {id: 112, type: 'subtitle', message: 'Субботний Тайтлец!'},\r\n//         {id: 911, type: 'marked_list', list: [\r\n//                 {message: 'Ммммм', name: 'list0'},\r\n//                 {message: 'Геее ггггей', name: 'list1'}\r\n//             ]},\r\n//         {id: 633, type: 'link', list: [\r\n//                 {link: 'https://vk.com/alexgeniusman', title: 'воконтактик', name: 'list0'},\r\n//             ]},\r\n    ], //резюме\r\n\r\n}\r\n\r\nconst editorReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_SECTION:\r\n            return {\r\n                ...state,\r\n                CV: [...state.CV, action.content]\r\n            }\r\n        case DELETE_SECTION:\r\n            return {\r\n                ...state,\r\n                CV: state.CV.filter(cv => cv.id !== action.id)\r\n            }\r\n        case UPDATE_SECTION:\r\n            switch (action.content.type) {\r\n                case 'text':\r\n                case 'subtitle':\r\n                case 'title':\r\n                    return {\r\n                        ...state,\r\n                        CV: state.CV.map(cv => action.content.id === cv.id //мапаем массив cv и ищем совпадение по айдишнику\r\n                            ?\r\n                            (\r\n                                {\r\n                                    ...cv,\r\n                                    message: action.content.message, //Меняем мессадж\r\n                                }\r\n                            )\r\n                            : ({\r\n                                ...cv //иначе просто делаем копию объекта, без изменений\r\n                            }) )\r\n                    }\r\n                case 'marked_list':\r\n                    return {\r\n                        ...state,\r\n                        CV: state.CV.map(cv => action.content.id === cv.id //мапаем массив cv и ищем совпадение по айдишнику\r\n                            ?\r\n                            (\r\n                                {\r\n                                    ...cv,\r\n                                    list: cv.list.map((list) => {\r\n                                        return (\r\n                                            action.content.name === list.name\r\n                                                ?\r\n                                                ({\r\n                                                    ...list,\r\n                                                    message: action.content.message\r\n                                                })\r\n                                                :\r\n                                                ({\r\n                                                    ...list\r\n                                                })\r\n                                        )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            )\r\n                            : ({\r\n                                ...cv //иначе просто делаем копию объекта, без изменений\r\n                            }) )\r\n                    }\r\n                case 'link':\r\n                    return {\r\n                        ...state,\r\n                        CV: state.CV.map(cv => action.content.id === cv.id //мапаем массив cv и ищем совпадение по айдишнику\r\n                            ?\r\n                            (\r\n                                {\r\n                                    ...cv,\r\n                                    list: cv.list.map((list) => {\r\n                                        return (\r\n                                            action.content.name === list.name\r\n                                                ?\r\n                                                ({\r\n                                                    ...list,\r\n                                                    link: action.content.link,\r\n                                                    title: action.content.title,\r\n                                                })\r\n                                                :\r\n                                                ({\r\n                                                    ...list\r\n                                                })\r\n                                        )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            )\r\n                            : ({\r\n                                ...cv //иначе просто делаем копию объекта, без изменений\r\n                            }) )\r\n                    }\r\n\r\n                default:\r\n                    return state\r\n            }\r\n        case ADD_LINE:\r\n            return {\r\n                ...state,\r\n                CV: state.CV.map(cv => action.id === cv.id //мапаем массив cv и ищем совпадение по айдишнику\r\n                    ?\r\n                    (\r\n                        {\r\n                            ...cv,\r\n                            list: [...cv.list, {message: '', name: Math.random() * (9999999 - 1) + 1}]\r\n\r\n                        }\r\n                    )\r\n                    : ({\r\n                        ...cv //иначе просто делаем копию объекта, без изменений\r\n                    }) )\r\n            }\r\n        case DELETE_LINE:\r\n            return {\r\n                ...state,\r\n                CV: state.CV.map(cv => action.content.id === cv.id //мапаем массив cv и ищем совпадение по айдишнику\r\n                    ?\r\n                    (\r\n                        {\r\n                            ...cv,\r\n                            list: cv.list.filter(item =>  item.name !== action.content.name)\r\n                        }\r\n                    )\r\n                    : ({\r\n                        ...cv //иначе просто делаем копию объекта, без изменений\r\n                    }) )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setSection = (content) => ({type: SET_SECTION, content})\r\nexport const updateSection = (content) => ({type: UPDATE_SECTION, content})\r\nexport const deleteSection = (id) => ({type: DELETE_SECTION, id})\r\nexport const addLine = (id) => ({type: ADD_LINE, id})\r\nexport const deleteLine = (content) => ({type: DELETE_LINE, content})\r\n\r\nexport const getProjectData = (projectId, private_or_union) => { //Получение информации о проекте\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n        }\r\n        catch(error) {\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default editorReducer\r\n","export default __webpack_public_path__ + \"static/media/Подольский_ИНБО-04-19_трпп_4.edfad13b.pdf\";","const MAIN_NODE_SIZE = 7;\r\nconst CHILD_NODE_SIZE = 7;\r\nconst LEAF_NODE_SIZE = 1;\r\nconst LEAF_NODE_DISTANCE = 0;\r\nexport const MANY_BODY_STRENGTH = -100;\r\nexport const nodes = [];\r\nexport const links = [];\r\n\r\nconst addMainNode = (node) => {\r\n    node.size = MAIN_NODE_SIZE;\r\n    node.color = node.is_checked ? 'green' : 'red';\r\n    nodes.push(node);\r\n};\r\n\r\nconst addChildNode = (parentNode, childNode,\r\n                      size = CHILD_NODE_SIZE,\r\n                      distance = 100) => {\r\n\r\n    childNode.size = size;\r\n    childNode.color = 'transparent';\r\n\r\n    nodes.push(childNode);\r\n\r\n    links.push({\r\n        source: parentNode,\r\n        target: childNode,\r\n        distance,\r\n        color: 'transparent',\r\n    });\r\n};\r\n\r\n\r\nconst assembleChildNode = (childNode, numLeaves = 2) => {\r\n    for (let i = 0; i < numLeaves; i++) {\r\n        addChildNode(\r\n            childNode,\r\n            { id: '' },\r\n            LEAF_NODE_SIZE,\r\n            LEAF_NODE_DISTANCE\r\n        );\r\n    }\r\n};\r\n\r\nconst connectMainNodes = (source, target, distance = 75, color = '#4C514A') => {\r\n    links.push({\r\n        source,\r\n        target,\r\n        distance: distance,\r\n        color: color,\r\n    });\r\n};\r\n\r\nconst treeBuilder = (roomIds, root) => {\r\n    roomIds.map((roomId) => {\r\n        const findingObj = nodes.find(node => node.id === roomId)\r\n        const connected_rooms = findingObj.connected_rooms\r\n\r\n        if(roomIds.length <= 1) {\r\n            connectMainNodes(root, findingObj, 75)\r\n            assembleChildNode(root)\r\n        }\r\n        else if (connected_rooms.length <= 1) {\r\n            connectMainNodes(root, findingObj, 75)\r\n        }\r\n        else if (roomIds.length <= 3) {\r\n            connectMainNodes(root, findingObj, 150)\r\n        }\r\n        else {\r\n            connectMainNodes(root, findingObj, 300)\r\n        }\r\n        return 0\r\n    })\r\n\r\n}\r\n\r\nconst example =\r\n    [\r\n        {\r\n            id: 1,\r\n            name: \"Комната 1\",\r\n            connected_rooms: [2,5],\r\n            is_checked: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Комната 2\",\r\n            connected_rooms: [1,3,4,7],\r\n            is_checked: false,\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Комната 3\",\r\n            connected_rooms: [2,4,7],\r\n            is_checked: false,\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Комната 4\",\r\n            connected_rooms: [2,3,5,6],\r\n            is_checked: true,\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Комната 5\",\r\n            connected_rooms: [1,2,3,4,6],\r\n            is_checked: true,\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Комната 6\",\r\n            connected_rooms: [2,3,4,5],\r\n            is_checked: true,\r\n        },\r\n        {\r\n            id: 7,\r\n            name: \"Комната 7\",\r\n            connected_rooms: [2,3],\r\n            is_checked: true,\r\n        },\r\n    ]\r\n\r\n// const mainNode = { id: example.id, is_checked: example.is_checked, name: example.name }\r\n\r\nexample && example.length > 0 &&\r\nexample.map((room, index) => addMainNode(room))\r\n\r\nexample.map((room, index) => treeBuilder(room.connected_rooms, room))\r\n\r\n// example.connected_rooms &&\r\n// example.connected_rooms.length > 0 &&\r\n// treeBuilder(example.connected_rooms, nodes[0])\r\n\r\nconsole.log('nodes', nodes)\r\n\r\nconsole.log('links', links)\r\n\r\n// const artsWeb = { id: 'Arts Web' };\r\n// addMainNode(artsWeb);\r\n// assembleChildNode(artsWeb, 'Community Vision');\r\n// assembleChildNode(artsWeb, 'Silicon Valley Creates');\r\n\r\n// const socialImpactCommons = { id: 'Social Impact Commons' };\r\n// addMainNode(socialImpactCommons);\r\n// assembleChildNode(socialImpactCommons, 'Theatre Bay Area');\r\n// assembleChildNode(\r\n//   socialImpactCommons,\r\n//   'EastSide Arts Alliance'\r\n// );\r\n// assembleChildNode(socialImpactCommons, 'Local Color');\r\n\r\n\r\n// const cast = { id: 'Community Arts Stabilization Trust' };\r\n// addMainNode(cast);\r\n// assembleChildNode(cast, 'CounterPulse');\r\n// assembleChildNode(cast, 'Luggage Store Gallery');\r\n// assembleChildNode(cast, 'Performing Arts Workshop');\r\n// assembleChildNode(cast, '447 Minna St.');\r\n// assembleChildNode(cast, 'Keeping Space Oakland');\r\n\r\n// const ambitioUS = { id: 'AmbitioUS' };\r\n// addMainNode(ambitioUS);\r\n// assembleChildNode(ambitioUS, 'EBPREC', 0);\r\n// assembleChildNode(ambitioUS, 'SELC', 0);\r\n// assembleChildNode(ambitioUS, 'The Runway Project', 0);\r\n// assembleChildNode(ambitioUS, 'Common Future', 0);\r\n// assembleChildNode(ambitioUS, 'Freelancers Union', 0);\r\n// assembleChildNode(\r\n//   ambitioUS,\r\n//   'US Federation of Worker Cooperatives',\r\n//   0\r\n// );\r\n\r\n// connectMainNodes(artsWeb, socialImpactCommons);\r\n// connectMainNodes(artsWeb, cast);\r\n// connectMainNodes(socialImpactCommons, cast);\r\n// connectMainNodes(ambitioUS, cast);\r\n// connectMainNodes(ambitioUS, socialImpactCommons);\r\n// connectMainNodes(ambitioUS, artsWeb);\r\n","import React, {useEffect} from 'react'\r\n\r\n// import {\r\n//     forceSimulation,\r\n//     forceManyBody,\r\n//     forceLink,\r\n//     forceCenter,\r\n//\r\n// } from 'd3-force'\r\n//\r\n// import {zoom, zoomIdentity} from 'd3-zoom'\r\n// import {select, } from 'd3-selection'\r\n// import {drag} from 'd3-drag'\r\n\r\nimport * as d3 from 'd3'\r\nimport {nodes, links, MANY_BODY_STRENGTH} from './D3Data'\r\n\r\nconst D3Main = (props) => {\r\n\r\n    let svg = ''\r\n    useEffect(() => {\r\n\r\n    svg = d3.select('#container')\r\n\r\n    const width = +svg.attr('width')\r\n    const height = +svg.attr('height')\r\n    // debugger\r\n    const centerX = 0\r\n    const centerY = 0\r\n    // svg.attr(\"transform\",\"translate(0,0)scale(.5,.5)\");\r\n\r\n    const simulation = d3.forceSimulation(nodes)\r\n        .force('charge', d3.forceManyBody().strength(MANY_BODY_STRENGTH))\r\n        .force(\r\n            'link',\r\n            d3.forceLink(links).distance((link) => link.distance)\r\n        )\r\n        .force('center', d3.forceCenter(centerX, centerY))\r\n\r\n        // let zoom = d3.behavior.zoom().translate([100,50]).scale(.5);\r\n\r\n    let zoom_handler = d3.zoom()\r\n    .on('zoom', zoom_actions)\r\n\r\n    zoom_handler(svg)\r\n\r\n    let g = svg.append(\"svg:g\")\r\n\r\n    const lines = g.append('g')\r\n        .attr(\"class\", \"links\")\r\n        .selectAll('line')\r\n        .data(links)\r\n        .enter()\r\n        .append('line')\r\n        .attr('stroke', (link) => link.color || 'black')\r\n\r\n\r\n    const circles = g.append('g')\r\n        .attr(\"class\", \"nodes\")\r\n        .selectAll('circle')\r\n        .data(nodes)\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', (node) => node.color || 'gray')\r\n        .attr('r', (node) => node.size)\r\n        .style('cursor', 'pointer')\r\n        // .call(dragInteraction)\r\n        .on('click', function (d, i) {\r\n            const id = i.id\r\n            window.alert(`https://vk.com/id` + id)\r\n            // window.location.href = `https://vk.com/id` + id\r\n            // handle events here\r\n            // d - datum\r\n            // i - identifier or index\r\n            // this - the `<rect>` that was clicked\r\n        })\r\n\r\n    const text = g.append('g')\r\n        .selectAll('text')\r\n        .data(nodes)\r\n        .enter()\r\n        .append('text')\r\n        .attr('text-anchor', 'middle')\r\n        .attr('alignment-baseline', 'middle')\r\n        .style('pointer-events', 'none')\r\n        .style('font-weight', 500)\r\n        .style('font-size', 10)\r\n        .style('fill', '#fff')\r\n        .text((node) => node.name)\r\n\r\n    let drag_handler = d3.drag()\r\n        .on('start', drag_start)\r\n        .on('drag', drag_drag)\r\n        .on('end', drag_end)\r\n\r\n    drag_handler(circles)\r\n\r\n\r\n\r\n    // zoom_handler(svg)\r\n\r\n    function drag_start(event, d) {\r\n        if (!event.active) simulation.alpha(0.3).restart()\r\n        d.fx = d.x\r\n        d.fy = d.y\r\n    }\r\n\r\n//make sure you can't drag the circle outside the box\r\n    function drag_drag(event, d) {\r\n        d.fx = event.x\r\n        d.fy = event.y\r\n    }\r\n\r\n    function drag_end(event, d) {\r\n        if (!event.active) simulation.alphaTarget(0)\r\n        d.fx = null\r\n        d.fy = null\r\n    }\r\n\r\n//Zoom functions\r\n    function zoom_actions(e) {\r\n\r\n        g.attr('transform', e.transform)\r\n    }\r\n\r\n    simulation.on('tick', () => {\r\n        circles.attr('cx', (node) => node.x).attr('cy', (node) => node.y)\r\n        text.attr('x', (node) => node.x).attr('y', (node) => node.y - 15)\r\n\r\n        lines\r\n            .attr('x1', (link) => link.source.x)\r\n            .attr('y1', (link) => link.source.y)\r\n            .attr('x2', (link) => link.target.x)\r\n            .attr('y2', (link) => link.target.y)\r\n    })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <svg id='container' viewBox=\"0 0 800 1000\" preserveAspectRatio=\"xMidYMid meet\"\r\n            > </svg>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default D3Main\r\n\r\n","import React from 'react'\r\nimport s from './Container.module.scss'\r\nimport EditorContainer from './Editor/EditorContainer'\r\nimport ResultContainer from './Result/ResultContainer'\r\nimport Test from './Result/Test'\r\nimport Test2 from './Result/Test2'\r\nimport Test3 from './Result/Test3'\r\nimport D3Main from './D3/D3Main'\r\n\r\n\r\nconst Container = () => {\r\n    return (\r\n        <div className='outer'>\r\n            {/*<div className='container'>*/}\r\n            {/*    <div className={s.container}>*/}\r\n            {/*        /!*<EditorContainer />*!/*/}\r\n\r\n            {/*        <ResultContainer />*/}\r\n            {/*    </div>*/}\r\n\r\n\r\n            {/*    /!*<Test />*!/*/}\r\n            {/*    /!*<Test2 />*!/*/}\r\n            {/*    /!*<Test3 />*!/*/}\r\n\r\n\r\n\r\n            {/*</div>*/}\r\n                <D3Main />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container","import './App.scss'\nimport './common/style.scss'\nimport {Switch} from 'react-router-dom'\nimport Container from './components/Container'\n\nconst App = () => {\n    return (\n        <>\n            <Switch>\n                <Container />\n            </Switch>\n        </>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport editorReducer from \"./editor-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    editor: editorReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport {BrowserRouter} from 'react-router-dom'\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\ndocument.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"Editor_editor__3RnCE\",\"buttons\":\"Editor_buttons__fO1Zk\",\"item\":\"Editor_item__3bnUx\",\"button\":\"Editor_button__2X4nY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditMarkedList_container__1vqpM\",\"footer\":\"EditMarkedList_footer__1HWDP\",\"inputCross\":\"EditMarkedList_inputCross__24W39\",\"cross\":\"EditMarkedList_cross__A2JNE\",\"inputContainer\":\"EditMarkedList_inputContainer__2PXVC\",\"input\":\"EditMarkedList_input__1KWIQ\",\"addBtn\":\"EditMarkedList_addBtn__18g9T\"};"],"sourceRoot":""}